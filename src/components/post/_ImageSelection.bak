import SortableImage from './SortableImage';
import { DndContext, DragEndEvent, closestCenter } from '@dnd-kit/core';
import { SortableContext, verticalListSortingStrategy, arrayMove } from '@dnd-kit/sortable';

interface ImageSelectionProps {
  images: any[];
  imageUrls: string[];
  selectedCover: number | null;
  handleDragEnd: (event: DragEndEvent) => void;
  handleSetCover: (id: number) => void;
}

const ImageSelection = ({ images, imageUrls, selectedCover, handleDragEnd, handleSetCover }: ImageSelectionProps) => {
  return (
    <div className='w-full m-auto overflow-auto'>
      <h2 className='text-center text-sm text-gray-500 mb-2'>대표 이미지 선택</h2>
      <DndContext
        collisionDetection={closestCenter}
        onDragEnd={handleDragEnd}
      >
        <SortableContext
          items={images.map((image) => image.id).filter((id): id is number => id !== undefined)}
          strategy={verticalListSortingStrategy}
        >
          <div className='flex gap-4'>
            {images.map(
              (image, index) =>
                image.id !== undefined && (
                  <SortableImage
                    key={image.id}
                    image={{
                      ...image,
                      blobUrl: imageUrls[index],
                      post_image_name: image.post_image_name!,
                      id: image.id,
                    }}
                    onSetCover={() => handleSetCover(image.id)}
                    selectedCover={selectedCover}
                  />
                ),
            )}
          </div>
        </SortableContext>
      </DndContext>
    </div>
  );
};

export default ImageSelection;
